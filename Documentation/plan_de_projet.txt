todo
 - créer un fichier yaml qui contient les caractéristiques des app
 - créer une fonction generate_packet qui prend en parametre un fichier yaml qui va lui donner les caracterstique de l'app
	- in : 
		- l'app et ses attributs
	- out : 
		- les temps d'inter-arrivées des paquets
		- les longueurs des paquets
 - créer une focntion qui determine les cqi
	- pathloss -> mapping -> CQI
 - creer une fonction qui associe les CQI dans les fichiers  
 - creer une fonction qui utilise les tables pour trouver les efficacites
 - creer une fonction qui calcule RB
 - creer une fonction qui calcule le Ninfo
 - Gestion du traffic
	- determine tes coords
	- trouve tes pathloss
	- cmb d'UE par antenne avec les pathloss
	- split tes RB par antenne en fonction du traffic generer par les UE
 - tout mettre ensemble et faire des graphs







- Questions a big J
	- comment faire le mapping, ya yu des big nono?
	- comment on determine si cest out of range
	- est-ce que ya dautre metrique check sauf le pathloss pour le mapping
	- pour la gestion du traffic, on simule nos files d'attentes au niveau des UE ou des antenness
	- elaborer sur N_info, trame, etc.
	- on regarde le traffic en bit ou paquet

- Question/Réponse
	1. Existe-t-il une relation particulière recommandée pour effectuer le mapping du pathloss vers le CQI (par exemple : linéaire, exponentielle, par seuils, etc.) ?
	-R: Vous pouvez utiliser la relation de votre choix, tant que vous pouvez la justifier. Consultez la littérature à ce sujet au besoin.

	2. Y a-t-il des erreurs courantes à éviter dans ce processus de mapping ?
	-R: Peut-être faire attention à bien gérer les pathloss infinis et nuls.
	
	3. Comment déterminer si un UE est considéré comme étant hors de portée ? Est-ce uniquement en fonction d’un seuil de pathloss, de CQI, ou selon une autre métrique comme le SNR ?
	-R: Bonne question. Je dirais que cela dépend de votre mapping CQI. Encore une fois, vous pouvez l’implémenter de la façon que vous souhaitez, simplement expliquer/justifier votre décision. Vous pourriez tester différentes façons de faire et voir comment cela impacte le réseau.
	
	4. Le pathloss est-il suffisant pour déterminer le CQI dans notre simulation, ou doit-on aussi considérer d’autres facteurs, comme le SNR?
	-R: L’utilisation du pathloss est suffisante.
	
	5. Pour simuler le trafic, doit-on gérer les files d’attente au niveau des UEs, des antennes, ou les deux ? Cela concerne notamment les cas de congestion ou de priorisation selon l’application.
	-R: Chaque UE souhaite envoyer son message dès qu’il est généré. Le flot de paquets est limité par l’allocation des RBs par l’antenne. C’est donc l’antenne qui gère cette allocation et, par conséquent, la file d’attente.
	
	6. Pourriez-vous préciser comment intégrer la notion de trame/slot dans le calcul de N_info et comment cela influence la transmission d’un paquet dans le simulateur ?
	-R: Une trame/slot est un temps d’allocation à un UE durant lequel il peut transmettre un message. Le calcul de Ninfo correspond au calcul du nombre de bits maximal que peut envoyer l’UE dans ce laps de temps. Si la taille d’un paquet est supérieure à Ninfo, il faudra le fragmenter, ce qui va affecter la transmission du paquet.
	
	7. Dans le cadre de la file d’attente et de la gestion des transmissions, faut-il modéliser les files en paquets entiers ou en quantité de bits ? En d'autres mots, est-ce que chaque entité dans la file représente un paquet complet ou une charge binaire à fragmenter et envoyer progressivement ?
	-R: Vous êtes libre de faire l’implémentation que vous souhaitez, tant que le contenu des trames est bien celui attendu et que votre implémentation vous permet d’obtenir les résultats/statistiques nécessaires pour votre rapport.

	8. faut-il modifier les hauteurs, gains et fréquences des antennes ? Combiuen d'antennes mettre dans nos simulations ?
	-R: Vous pouvez vous baser sur le nombre d’antennes présentes dans le laboratoire 3, ou bien le modifier si vous le souhaitez, si cela vous permet d’obtenir des résultats plus intéressants dans votre rapport. Même chose en ce qui concerne le gain et la hauteur : vous pouvez choisir une antenne présente dans le fichier devices_db et ajuster certains paramètres si nécessaire. Pour la fréquence, gardez à l’esprit que vous souhaitez implémenter le standard 5G NR. En ce qui concerne les espacements entre sous-porteuses, cela dépend si l’antenne est de type FR1 ou FR2. Référez-vous au standard 5G NR, qui dicte des valeurs spécifiques. Il en va de même pour les autres paramètres nécessaires, tels que la largeur de bande du canal. Vous pouvez donc modifier ou ajouter tout ce que vous jugez nécessaire dans les fichiers de cas et dans le fichier devices_db, incluant l’ajout ou le retrait de certains paramètres. L’important est que votre implémentation se rapproche du standard 5G NR et que vous puissiez justifier les changements apportés.


	
